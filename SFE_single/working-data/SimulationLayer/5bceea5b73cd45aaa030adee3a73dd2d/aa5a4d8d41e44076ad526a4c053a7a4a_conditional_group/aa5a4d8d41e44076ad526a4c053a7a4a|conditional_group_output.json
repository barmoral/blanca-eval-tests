{"message": ["Traceback (most recent call last):\n", "  File \"/projects/bamo6610/software/anaconda/env/openff-sage/lib/python3.9/site-packages/openff/evaluator/workflow/protocols.py\", line 1245, in _execute_protocol\n    protocol.execute(directory, available_resources)\n", "  File \"/projects/bamo6610/software/anaconda/env/openff-sage/lib/python3.9/site-packages/openff/evaluator/workflow/protocols.py\", line 704, in execute\n    self._execute(directory, available_resources)\n", "  File \"/projects/bamo6610/software/anaconda/env/openff-sage/lib/python3.9/site-packages/openff/evaluator/protocols/groups.py\", line 240, in _execute\n    super(ConditionalGroup, self)._execute(directory, available_resources)\n", "  File \"/projects/bamo6610/software/anaconda/env/openff-sage/lib/python3.9/site-packages/openff/evaluator/workflow/protocols.py\", line 1488, in _execute\n    self._inner_graph.execute(\n", "  File \"/projects/bamo6610/software/anaconda/env/openff-sage/lib/python3.9/site-packages/openff/evaluator/workflow/protocols.py\", line 1087, in execute\n    protocol_outputs[protocol_id] = ProtocolGraph._execute_protocol(\n", "  File \"/projects/bamo6610/software/anaconda/env/openff-sage/lib/python3.9/site-packages/openff/evaluator/workflow/protocols.py\", line 1245, in _execute_protocol\n    protocol.execute(directory, available_resources)\n", "  File \"/projects/bamo6610/software/anaconda/env/openff-sage/lib/python3.9/site-packages/openff/evaluator/workflow/protocols.py\", line 704, in execute\n    self._execute(directory, available_resources)\n", "  File \"/projects/bamo6610/software/anaconda/env/openff-sage/lib/python3.9/site-packages/openff/evaluator/protocols/yank.py\", line 1407, in _execute\n    super(SolvationYankProtocol, self)._execute(directory, available_resources)\n", "  File \"/projects/bamo6610/software/anaconda/env/openff-sage/lib/python3.9/site-packages/openff/evaluator/protocols/yank.py\", line 592, in _execute\n    analysed_output = self._run_yank(directory, available_resources, setup_only)\n", "  File \"/projects/bamo6610/software/anaconda/env/openff-sage/lib/python3.9/site-packages/openff/evaluator/protocols/yank.py\", line 475, in _run_yank\n    exp_builder.run_experiments()\n", "  File \"/projects/bamo6610/software/anaconda/env/openff-sage/lib/python3.9/site-packages/yank/experiment.py\", line 738, in run_experiments\n    self._generate_experiments_protocols()\n", "  File \"/projects/bamo6610/software/anaconda/env/openff-sage/lib/python3.9/site-packages/yank/experiment.py\", line 2371, in _generate_experiments_protocols\n    mpiplus.distribute(self._generate_experiment_protocol,\n", "  File \"/projects/bamo6610/software/anaconda/env/openff-sage/lib/python3.9/site-packages/mpiplus/mpiplus.py\", line 523, in distribute\n    all_results = [task(job_args, *other_args, **kwargs) for job_args in distributed_args]\n", "  File \"/projects/bamo6610/software/anaconda/env/openff-sage/lib/python3.9/site-packages/mpiplus/mpiplus.py\", line 523, in <listcomp>\n    all_results = [task(job_args, *other_args, **kwargs) for job_args in distributed_args]\n", "  File \"/projects/bamo6610/software/anaconda/env/openff-sage/lib/python3.9/site-packages/yank/experiment.py\", line 2476, in _generate_experiment_protocol\n    alchemical_phase = phase_factory.initialize_alchemical_phase()\n", "  File \"/projects/bamo6610/software/anaconda/env/openff-sage/lib/python3.9/site-packages/yank/experiment.py\", line 268, in initialize_alchemical_phase\n    alchemical_phase = self.create_alchemical_phase()\n", "  File \"/projects/bamo6610/software/anaconda/env/openff-sage/lib/python3.9/site-packages/yank/experiment.py\", line 253, in create_alchemical_phase\n    alchemical_phase.create(anisotropic_dispersion_cutoff=dispersion_cutoff,\n", "  File \"/projects/bamo6610/software/anaconda/env/openff-sage/lib/python3.9/site-packages/yank/yank.py\", line 1086, in create\n    self._sampler.create(compound_states, sampler_states,\n", "  File \"/projects/bamo6610/software/anaconda/env/openff-sage/lib/python3.9/site-packages/openmmtools/multistate/multistatesampler.py\", line 597, in create\n    if self.online_analysis_interval % self._reporter.checkpoint_interval != 0:\n", "TypeError: unsupported operand type(s) for %: 'int' and 'method'\n"], "protocol_id": "aa5a4d8d41e44076ad526a4c053a7a4a|conditional_group", "@type": "openff.evaluator.workflow.exceptions.WorkflowException"}